import { TestBed } from '@angular/core/testing';

import { WeatherTableService } from './weather-table.service';
import { of } from 'rxjs';

describe('WeatherTableService', () => {
  let service: WeatherTableService;
  let httpClientSpy: any;

  beforeEach(() => {
    // TestBed.configureTestingModule({
    //   imports: [
    //     HttpClientTestingModule,
    //   ],
    // });
    // service = TestBed.inject(WeatherTableService);
    httpClientSpy = {
      get: jest.fn()
    }
    service = new WeatherTableService(httpClientSpy);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });

  it('should test getWeatherInitialData', () => {
    const resp = {
      "latitude": 52.52,
      "longitude": 13.419998,
      "generationtime_ms": 0.516057014465332,
      "utc_offset_seconds": 0,
      "timezone": "GMT",
      "timezone_abbreviation": "GMT",
      "elevation": 38.0,
      "hourly_units": {
        "time": "iso8601",
        "temperature_2m": "Â°C",
        "relativehumidity_2m": "%",
        "windspeed_10m": "km/h"
      },
      "hourly": {
        "time": ["2022-11-27T00:00", "2022-11-27T01:00", "2022-11-27T02:00", "2022-11-27T03:00", "2022-11-27T04:00", "2022-11-27T05:00", "2022-11-27T06:00", "2022-11-27T07:00", "2022-11-27T08:00", "2022-11-27T09:00", "2022-11-27T10:00", "2022-11-27T11:00", "2022-11-27T12:00", "2022-11-27T13:00", "2022-11-27T14:00", "2022-11-27T15:00", "2022-11-27T16:00", "2022-11-27T17:00", "2022-11-27T18:00", "2022-11-27T19:00", "2022-11-27T20:00", "2022-11-27T21:00", "2022-11-27T22:00", "2022-11-27T23:00", "2022-11-28T00:00", "2022-11-28T01:00", "2022-11-28T02:00", "2022-11-28T03:00", "2022-11-28T04:00", "2022-11-28T05:00", "2022-11-28T06:00", "2022-11-28T07:00", "2022-11-28T08:00", "2022-11-28T09:00", "2022-11-28T10:00", "2022-11-28T11:00", "2022-11-28T12:00", "2022-11-28T13:00", "2022-11-28T14:00", "2022-11-28T15:00", "2022-11-28T16:00", "2022-11-28T17:00", "2022-11-28T18:00", "2022-11-28T19:00", "2022-11-28T20:00", "2022-11-28T21:00", "2022-11-28T22:00", "2022-11-28T23:00", "2022-11-29T00:00", "2022-11-29T01:00", "2022-11-29T02:00", "2022-11-29T03:00", "2022-11-29T04:00", "2022-11-29T05:00", "2022-11-29T06:00", "2022-11-29T07:00", "2022-11-29T08:00", "2022-11-29T09:00", "2022-11-29T10:00", "2022-11-29T11:00", "2022-11-29T12:00", "2022-11-29T13:00", "2022-11-29T14:00", "2022-11-29T15:00", "2022-11-29T16:00", "2022-11-29T17:00", "2022-11-29T18:00", "2022-11-29T19:00", "2022-11-29T20:00", "2022-11-29T21:00", "2022-11-29T22:00", "2022-11-29T23:00", "2022-11-30T00:00", "2022-11-30T01:00", "2022-11-30T02:00", "2022-11-30T03:00", "2022-11-30T04:00", "2022-11-30T05:00", "2022-11-30T06:00", "2022-11-30T07:00", "2022-11-30T08:00", "2022-11-30T09:00", "2022-11-30T10:00", "2022-11-30T11:00", "2022-11-30T12:00", "2022-11-30T13:00", "2022-11-30T14:00", "2022-11-30T15:00", "2022-11-30T16:00", "2022-11-30T17:00", "2022-11-30T18:00", "2022-11-30T19:00", "2022-11-30T20:00", "2022-11-30T21:00", "2022-11-30T22:00", "2022-11-30T23:00", "2022-12-01T00:00", "2022-12-01T01:00", "2022-12-01T02:00", "2022-12-01T03:00", "2022-12-01T04:00", "2022-12-01T05:00", "2022-12-01T06:00", "2022-12-01T07:00", "2022-12-01T08:00", "2022-12-01T09:00", "2022-12-01T10:00", "2022-12-01T11:00", "2022-12-01T12:00", "2022-12-01T13:00", "2022-12-01T14:00", "2022-12-01T15:00", "2022-12-01T16:00", "2022-12-01T17:00", "2022-12-01T18:00", "2022-12-01T19:00", "2022-12-01T20:00", "2022-12-01T21:00", "2022-12-01T22:00", "2022-12-01T23:00", "2022-12-02T00:00", "2022-12-02T01:00", "2022-12-02T02:00", "2022-12-02T03:00", "2022-12-02T04:00", "2022-12-02T05:00", "2022-12-02T06:00", "2022-12-02T07:00", "2022-12-02T08:00", "2022-12-02T09:00", "2022-12-02T10:00", "2022-12-02T11:00", "2022-12-02T12:00", "2022-12-02T13:00", "2022-12-02T14:00", "2022-12-02T15:00", "2022-12-02T16:00", "2022-12-02T17:00", "2022-12-02T18:00", "2022-12-02T19:00", "2022-12-02T20:00", "2022-12-02T21:00", "2022-12-02T22:00", "2022-12-02T23:00", "2022-12-03T00:00", "2022-12-03T01:00", "2022-12-03T02:00", "2022-12-03T03:00", "2022-12-03T04:00", "2022-12-03T05:00", "2022-12-03T06:00", "2022-12-03T07:00", "2022-12-03T08:00", "2022-12-03T09:00", "2022-12-03T10:00", "2022-12-03T11:00", "2022-12-03T12:00", "2022-12-03T13:00", "2022-12-03T14:00", "2022-12-03T15:00", "2022-12-03T16:00", "2022-12-03T17:00", "2022-12-03T18:00", "2022-12-03T19:00", "2022-12-03T20:00", "2022-12-03T21:00", "2022-12-03T22:00", "2022-12-03T23:00"],
        "temperature_2m": [6.7, 6.6, 6.2, 6.0, 5.4, 4.2, 3.4, 3.0, 3.0, 3.4, 4.5, 5.5, 6.4, 6.7, 6.6, 5.8, 5.0, 4.6, 4.3, 4.1, 3.7, 3.3, 2.8, 2.6, 2.5, 2.4, 2.3, 2.1, 2.0, 2.0, 2.0, 1.9, 2.1, 2.6, 3.2, 3.8, 4.2, 4.3, 4.1, 3.4, 3.0, 2.8, 2.6, 2.5, 2.3, 2.2, 2.0, 1.8, 1.6, 1.4, 1.4, 1.4, 1.4, 1.3, 1.3, 0.7, 0.8, 1.5, 2.1, 3.0, 3.4, 3.7, 3.6, 3.0, 2.7, 2.3, 2.0, 1.8, 1.6, 1.4, 1.3, 1.2, 1.1, 1.1, 1.1, 1.2, 1.2, 1.3, 1.3, 1.4, 1.5, 1.8, 2.1, 2.4, 2.7, 2.8, 2.7, 2.5, 2.4, 2.3, 2.1, 1.9, 1.6, 1.4, 1.2, 1.2, 1.0, 0.9, 0.8, 0.6, 0.5, 0.5, 0.5, 0.5, 0.7, 0.9, 1.2, 1.6, 2.0, 2.2, 2.3, 2.3, 2.2, 2.1, 2.0, 1.9, 1.9, 1.8, 1.7, 1.5, 1.4, 1.0, 0.7, 0.4, 0.2, -0.0, -0.2, 0.8, 0.6, 0.6, 0.8, 1.1, 1.4, 1.4, 1.3, 1.0, 0.9, 0.7, 0.5, 0.4, 0.4, 0.3, 0.2, 0.0, -0.2, -0.6, -1.0, -1.4, -1.4, -1.3, -1.2, -1.1, -1.0, -0.7, -0.4, -0.1, 0.3, 0.3, 0.2, 0.1, 0.0, -0.0, -0.1, -0.2, -0.2, -0.3, -0.4, -0.5],
        "relativehumidity_2m": [98, 98, 98, 97, 97, 98, 100, 99, 97, 95, 87, 83, 78, 78, 82, 88, 94, 96, 96, 95, 94, 91, 91, 92, 93, 94, 95, 95, 93, 94, 93, 92, 91, 88, 85, 82, 80, 80, 82, 86, 86, 87, 90, 92, 93, 93, 93, 93, 94, 94, 94, 94, 94, 94, 94, 95, 94, 88, 85, 81, 79, 76, 80, 84, 87, 88, 90, 92, 94, 94, 95, 95, 96, 96, 96, 95, 95, 94, 94, 93, 92, 91, 90, 88, 87, 88, 89, 91, 92, 92, 92, 92, 92, 92, 92, 91, 91, 91, 92, 92, 92, 91, 90, 89, 88, 86, 83, 80, 78, 79, 81, 84, 86, 87, 89, 90, 90, 90, 90, 89, 88, 89, 88, 88, 88, 89, 88, 86, 84, 80, 77, 75, 72, 71, 71, 72, 74, 76, 79, 81, 82, 82, 80, 78, 75, 75, 75, 76, 76, 75, 76, 78, 81, 84, 84, 82, 81, 82, 85, 87, 87, 87, 86, 86, 86, 86, 86, 85],
        "windspeed_10m": [3.6, 3.8, 3.3, 4.5, 6.2, 6.9, 5.8, 7.6, 6.8, 8.6, 9.0, 8.5, 8.6, 9.9, 9.5, 8.1, 8.9, 8.7, 9.4, 9.9, 11.5, 11.5, 10.7, 10.7, 10.7, 10.7, 10.0, 11.2, 11.3, 12.4, 10.9, 10.7, 12.1, 12.3, 12.5, 13.2, 14.3, 15.0, 14.3, 12.8, 11.8, 11.7, 11.5, 10.9, 10.9, 10.8, 10.0, 9.8, 11.2, 11.2, 11.3, 11.2, 11.4, 11.8, 12.0, 12.3, 11.9, 14.0, 13.0, 12.2, 12.6, 13.2, 11.4, 10.2, 9.6, 9.6, 9.7, 9.3, 9.3, 8.8, 9.1, 9.0, 9.0, 8.7, 8.4, 8.3, 8.3, 8.7, 8.3, 8.3, 8.4, 8.4, 8.8, 9.6, 10.0, 10.0, 9.5, 9.0, 9.0, 9.4, 9.5, 9.5, 9.6, 9.6, 9.5, 9.0, 8.6, 8.4, 7.8, 7.6, 7.8, 7.8, 8.4, 9.3, 10.5, 11.5, 11.5, 11.2, 10.5, 9.9, 8.8, 8.7, 9.0, 9.5, 10.4, 10.4, 10.4, 10.2, 10.2, 10.6, 11.0, 11.0, 11.1, 11.1, 11.0, 11.2, 11.0, 10.8, 10.6, 10.6, 10.6, 11.3, 11.3, 10.8, 9.8, 9.0, 8.7, 8.7, 8.7, 8.7, 8.7, 8.9, 9.2, 10.0, 10.9, 11.2, 11.6, 11.7, 10.7, 9.5, 8.9, 9.7, 11.0, 12.5, 12.4, 11.6, 10.8, 10.5, 10.5, 10.5, 10.7, 11.1, 11.7, 11.7, 11.8, 11.9, 12.2, 12.3]
      }
    };
    const weatherDataAPIUrl = 'https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m,relativehumidity_2m,windspeed_10m';
    jest.spyOn(httpClientSpy, 'get').mockReturnValue(of(resp));
    service.getWeatherInitialData(weatherDataAPIUrl);
    expect(httpClientSpy.get).toBeCalledTimes(1);
    expect(httpClientSpy.get).toHaveBeenCalledWith(weatherDataAPIUrl);
  });

});
